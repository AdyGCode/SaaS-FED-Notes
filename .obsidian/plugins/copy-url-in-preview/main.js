/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var I=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var D=(o,i,e)=>i in o?I(o,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[i]=e;var L=(o,i)=>{for(var e in i)I(o,e,{get:i[e],enumerable:!0})},R=(o,i,e,n)=>{if(i&&typeof i=="object"||typeof i=="function")for(let t of S(i))!A.call(o,t)&&t!==e&&I(o,t,{get:()=>i[t],enumerable:!(n=B(i,t))||n.enumerable});return o};var W=o=>R(I({},"__esModule",{value:!0}),o);var f=(o,i,e)=>D(o,typeof i!="symbol"?i+"":i,e);var $={};L($,{default:()=>P});module.exports=W($);var r=require("obsidian");var d=require("obsidian"),T={loadImageBlob:5e3,longTap:500,deleteTempFile:6e4,successNotice:1800};function O(o,i){let e=new Promise((n,t)=>setTimeout(()=>{t(new Error(`timed out after ${o} ms`))},o));return Promise.race([i,e])}async function _(o){let i=o instanceof ArrayBuffer?new Blob([o],{type:"image/png"}):await y(o);try{let e=new ClipboardItem({[i.type]:i});await navigator.clipboard.write([e]),new d.Notice("Image copied to the clipboard!",T.successNotice)}catch(e){console.error(e),new d.Notice("Error, could not copy the image!")}}async function y(o){let i=()=>new Promise((e,n)=>{let t=new Image;t.crossOrigin="anonymous",t.onload=()=>{let a=document.createElement("canvas");a.width=t.width,a.height=t.height,a.getContext("2d").drawImage(t,0,0),a.toBlob(u=>{e(u)})},t.onerror=async()=>{try{await fetch(t.src,{mode:"no-cors"});let a=await y(`https://api.allorigins.win/raw?url=${encodeURIComponent(o)}`);e(a)}catch(a){n(new Error)}},t.src=o});return O(T.loadImageBlob,i())}function v(o,i,e,n){return o.on(i,e,n),()=>{o.off(i,e,n)}}function F(o){let i=o.target;if(i instanceof HTMLImageElement)return i;console.error("imageElement is supposed to be a HTMLImageElement. imageElement:",i)}function C(o,i){let n=i.vault.adapter.getFilePath("").replace("file://",""),t=o.pathname;if(t.startsWith(n)){let a=t.substring(n.length+1);return decodeURI(a)}}function M(o,i){o.workspace.getLeaf(!0).openFile(i,{active:!0})}function k(o,i){let e=F(i);if(!e)return;let n=o.workspace.getActiveFile(),t=C(new URL(e.src),o);if(!t)return;let a=n?o.metadataCache.getFirstLinkpathDest(t,n.path):o.vault.getAbstractFileByPath(t);a&&a instanceof d.TFile&&M(o,a)}function m(o,i,e){let n={"copy-to-clipboard":{section:"info",icon:"image-file",title:"interface.label-copy"},"open-in-new-tab":{section:"open",icon:"file-plus",title:"interface.menu.open-in-new-tab"},"open-in-default-app":{section:"system",icon:"arrow-up-right",title:"plugins.open-with-default-app.action-open-file"},"show-in-explorer":{section:"system",icon:"arrow-up-right",title:"plugins.open-with-default-app.action-show-in-folder"+(d.Platform.isMacOS?"-mac":"")},"reveal-in-navigation":{section:"system",icon:"folder",title:"plugins.file-explorer.action-reveal-file"},"reveal-in-navigation-tree":{section:"system",icon:"folder",title:"Reveal in File Tree Alternative"}};return i==="copy-to-clipboard"&&e&&o.onClick(async()=>{await _(typeof e=="string"?e:await e)}),o.setIcon(n[i].icon).setTitle(i18next.t(n[i].title)).setSection(n[i].section)}var w=require("obsidian");var U={middleClickNewTab:!0,revealInNavigation:!0,enableDefaultOnCanvas:!1},E=class extends w.PluginSettingTab{constructor(e,n){super(e,n);f(this,"plugin");this.plugin=n}display(){let{containerEl:e}=this;e.empty(),e.createEl("h3",{text:"Image Context Menus settings"}),new w.Setting(e).setName("Middle mouse click on image link to open in new tab").addToggle(n=>{n.setValue(this.plugin.settings.middleClickNewTab).onChange(t=>{this.plugin.settings.middleClickNewTab=t,this.plugin.saveSettings()})}),new w.Setting(e).setName("Reveal file in navigation menu item").setDesc("You might want to disable this if you use a plugin for replacing default Obsidian file navigation. This plugin supports File Tree Alternative by displaying a reveal menu item for it if installed.").addToggle(n=>{n.setValue(this.plugin.settings.revealInNavigation).onChange(t=>{this.plugin.settings.revealInNavigation=t,this.plugin.saveSettings()})}),new w.Setting(e).setName("Enable regular context menu on canvas").setDesc(`The regular context menu sometimes duplicates the context menu on the canvas, so it's disabled there by default.
There is a separate context menu for images directly on the canvas, but if that's not enough (for example for images in notes on canvas), you can enable the regular context menu here too.`).addToggle(n=>{n.setValue(this.plugin.settings.enableDefaultOnCanvas).onChange(t=>{this.plugin.settings.enableDefaultOnCanvas=t,this.plugin.saveSettings()})})}};var P=class extends r.Plugin{constructor(){super(...arguments);f(this,"longTapTimeoutId");f(this,"canvasCardMenu");f(this,"settings")}async loadSettings(){this.settings=Object.assign({},U,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async onload(){await this.loadSettings(),this.addSettingTab(new E(this.app,this)),this.registerDocument(document);let e=/(avif|bmp|gif|jpe?g|png|svg|webp)$/gi;this.app.workspace.on("window-open",(n,t)=>{this.registerDocument(t.document)}),this.registerEvent(this.app.workspace.on("file-menu",(n,t,a)=>{var c;a==="canvas-menu"&&t instanceof r.TFile&&((c=t.extension.match(e))!=null?c:t.extension==="pdf")&&(n.addItem(u=>m(u,"open-in-new-tab").onClick(()=>{M(this.app,t)})),n.addItem(u=>m(u,"copy-to-clipboard",this.app.vault.readBinary(t))))})),this.registerEvent(this.app.workspace.on("canvas:node-menu",(n,t)=>{let a=t.unknownData;if(a.type==="link"){let c=a.url;n.addItem(u=>m(u,"copy-to-clipboard",c).setSection("canvas"))}})),this.registerEvent(this.app.workspace.on("url-menu",(n,t)=>{t.match(e)&&n.addItem(a=>m(a,"copy-to-clipboard",t))}))}registerDocument(e){let n;r.Platform.isDesktop?n=[v(e,"contextmenu","img",this.onImageContextMenu.bind(this)),v(e,"mouseup","img",this.onImageMouseUp.bind(this))]:n=[v(e,"touchstart","img",this.startWaitingForLongTap.bind(this)),v(e,"touchend","img",this.stopWaitingForLongTap.bind(this)),v(e,"touchmove","img",this.stopWaitingForLongTap.bind(this))],this.register(()=>{n.forEach(t=>{t()})})}startWaitingForLongTap(e,n){n instanceof HTMLImageElement&&(this.longTapTimeoutId?(clearTimeout(this.longTapTimeoutId),this.longTapTimeoutId=void 0):e.targetTouches.length==1&&(this.longTapTimeoutId=window.setTimeout(()=>void this.processLongTap.bind(this,e,n)(),T.longTap)))}stopWaitingForLongTap(){this.longTapTimeoutId&&(clearTimeout(this.longTapTimeoutId),this.longTapTimeoutId=void 0)}async processLongTap(e,n){e.stopPropagation(),this.longTapTimeoutId=void 0;let t=this.app.vault.adapter,a=window,c=t.getFullPath(""),p=a.WEBVIEW_SERVER_URL+"/_capacitor_file_"+c;if(n.src.startsWith(p)){let s=n.src.replace(p,""),g=decodeURIComponent(s);await t.open(g)}else try{let s=await y(n.src);if(!s)throw new Error("blob was null");if(!s.type.startsWith("image/")){new r.Notice(`Unsupported mime type ${s.type}`);return}let g=s.type.replace("image/",""),h=`/.temp-${window.URL.createObjectURL(new Blob([])).split("/").pop()}.${g}`,l=await s.arrayBuffer();await t.writeBinary(h,l),setTimeout(()=>void t.remove(h),T.deleteTempFile),new r.Notice("Image was temporarily saved and will be removed in 1 minute"),await t.open(h)}catch(s){new r.Notice("Cannot open image"),console.error(s)}}onImageContextMenu(e){var g,x,h;let n=F(e);if(!n||!this.settings.enableDefaultOnCanvas&&((g=this.app.workspace.getActiveFile())==null?void 0:g.extension)==="canvas"||((h=(x=e.targetNode)==null?void 0:x.parentElement)==null?void 0:h.className)==="canvas-node-content media-embed image-embed is-loaded")return;let t=n.currentSrc,a=new URL(t),c=a.protocol;if(!["app:","data:","http:","https:"].includes(c)){new r.Notice(`no handler for ${c} protocol`);return}e.preventDefault();let p=new r.Menu,s=C(a,this.app);p.addSections(["open","info","system"]),c==="app:"&&s&&(p.addItem(l=>m(l,"open-in-new-tab").onClick(()=>{k(this.app,e)})),r.Platform.isDesktop&&(p.addItem(l=>m(l,"open-in-default-app").onClick(()=>{this.app.openWithDefaultApp(s)})),p.addItem(l=>m(l,"show-in-explorer").onClick(()=>{this.app.showInFolder(s)})),this.settings.revealInNavigation&&p.addItem(l=>m(l,"reveal-in-navigation").onClick(()=>{var N;let b=this.app.vault.getFileByPath(s);if(!b){console.warn(`getFileByPath returned null for ${s}`);return}(N=this.app.internalPlugins.getEnabledPluginById("file-explorer"))==null||N.revealInFolder(b)})),this.app.plugins.enabledPlugins.has("file-tree-alternative")&&p.addItem(l=>m(l,"reveal-in-navigation-tree").onClick(()=>{let b=this.app.vault.getFileByPath(s);if(!b){console.warn(`getFileByPath returned null for ${s}`);return}window.dispatchEvent(new CustomEvent("fta-reveal-file",{detail:{file:b}}))})))),p.addItem(l=>m(l,"copy-to-clipboard",t)),p.showAtPosition({x:e.pageX,y:e.pageY}),this.app.workspace.trigger("copy-url-in-preview:contextmenu",p)}onImageMouseUp(e){e.button==1&&this.settings.middleClickNewTab&&k(this.app,e)}};

/* nosourcemap */