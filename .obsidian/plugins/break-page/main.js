/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ExamplePlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var ExamplePlugin = class extends import_obsidian.Plugin {
  onload() {
    this.addCommand({
      id: "insert-break-page",
      name: "Insert break page",
      hotkeys: [],
      editorCallback: (editor) => {
        const currentPosition = editor.getCursor();
        editor.replaceRange(
          '<div class="page-break" style="page-break-before: always;"></div>\n',
          currentPosition
        );
        editor.setCursor(editor.getCursor().line + 1, 0);
      }
    });
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgRWRpdG9yLCBQbHVnaW4gfSBmcm9tIFwib2JzaWRpYW5cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4YW1wbGVQbHVnaW4gZXh0ZW5kcyBQbHVnaW4ge1xyXG5cdG9ubG9hZCgpIHtcclxuXHRcdHRoaXMuYWRkQ29tbWFuZCh7XHJcblx0XHRcdGlkOiBcImluc2VydC1icmVhay1wYWdlXCIsXHJcblx0XHRcdG5hbWU6IFwiSW5zZXJ0IGJyZWFrIHBhZ2VcIixcclxuXHRcdFx0aG90a2V5czogW10sXHJcblx0XHRcdGVkaXRvckNhbGxiYWNrOiAoZWRpdG9yOiBFZGl0b3IpID0+IHtcclxuXHRcdFx0XHRjb25zdCBjdXJyZW50UG9zaXRpb24gPSBlZGl0b3IuZ2V0Q3Vyc29yKCk7XHJcblx0XHRcdFx0ZWRpdG9yLnJlcGxhY2VSYW5nZShcclxuXHRcdFx0XHRcdCc8ZGl2IGNsYXNzPVwicGFnZS1icmVha1wiIHN0eWxlPVwicGFnZS1icmVhay1iZWZvcmU6IGFsd2F5cztcIj48L2Rpdj5cXG4nLFxyXG5cdFx0XHRcdFx0Y3VycmVudFBvc2l0aW9uXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0XHRlZGl0b3Iuc2V0Q3Vyc29yKGVkaXRvci5nZXRDdXJzb3IoKS5saW5lICsgMSwgMCk7XHJcblx0XHRcdH0sXHJcblx0XHR9KVxyXG5cdH1cclxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQUErQjtBQUUvQixJQUFxQixnQkFBckIsY0FBMkMsdUJBQU87QUFBQSxFQUNqRCxTQUFTO0FBQ1IsU0FBSyxXQUFXO0FBQUEsTUFDZixJQUFJO0FBQUEsTUFDSixNQUFNO0FBQUEsTUFDTixTQUFTLENBQUM7QUFBQSxNQUNWLGdCQUFnQixDQUFDLFdBQW1CO0FBQ25DLGNBQU0sa0JBQWtCLE9BQU8sVUFBVTtBQUN6QyxlQUFPO0FBQUEsVUFDTjtBQUFBLFVBQ0E7QUFBQSxRQUNEO0FBQ0EsZUFBTyxVQUFVLE9BQU8sVUFBVSxFQUFFLE9BQU8sR0FBRyxDQUFDO0FBQUEsTUFDaEQ7QUFBQSxJQUNELENBQUM7QUFBQSxFQUNGO0FBQ0Q7IiwKICAibmFtZXMiOiBbXQp9Cg==
